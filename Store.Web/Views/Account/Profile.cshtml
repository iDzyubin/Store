@model Store.BusinessLogic.Models.Account.UserExtendedInfoModel
@inject ISaleService SaleService
@{
    ViewData["Title"] = "Профиль";
}

<h1 class="display-4">@Model.FirstName @Model.LastName</h1>

<hr/>
<div>
    <dl class="row">
        <dt class="col-sm-2">
            E-mail адрес
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor( model => model.Email )
        </dd>
        <dt class="col-sm-2">
            Имя
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor( model => model.FirstName )
        </dd>
        <dt class="col-sm-2">
            Фамилия
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor( model => model.LastName )
        </dd>
    </dl>
</div>

@if( !SaleService.GetSales().Any() )
{
    <div class="alert alert-info">На данный момент заказов не было сформировано</div>
}
else
{
    <hr/>
    <br/>
    <h3><small class="text-muted">Список заказов</small></h3>
    <br/>

    <div>
        <table class="table table-striped table-bordered">
            <thead>
            <tr>
                <th>Номер заказа</th>
                <th>Сумма</th>
                <th>Статус</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach( var sale in SaleService.GetSales() )
            {
                <tr>
                    <td>@sale.Id</td>
                    <td>@sale.TotalPrice</td>
                    <td>@sale.Status</td>
                    <td class="text-center">
                        <a class="btn btn-outline-danger"
                           asp-controller="Sale"
                           asp-action="Cancel">Отменить</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}